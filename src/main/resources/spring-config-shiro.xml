<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd ">

	<description>apache shiro配置</description>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/sys/login" />
		<!-- 登录成功后跳转的地址 -->
		<!-- <property name="successUrl" value="/sys/index" /> -->
		<!-- 用户访问未对其授权的资源时，显示的链接 -->
		<!-- <property name="unauthorizedUrl" value="/error/unauthor" /> -->
		<!-- 'filters'属性不是必需的，因为任何声明javax.servlet.Filter的bean都将通过其链接定义的beanName自动获取并可用，但是可以在此处执行实例覆盖或定义别名-->
		<!-- 
			<property name="filters">
        		<util:map>
            		<entry key="anAlias" value-ref="someFilter"/>
        		</util:map>
    		</property> 
    	-->
		<!-- 自定义权限设置，进行url过滤 -->
		<property name="filterChainDefinitions">
		<!-- 参考： http://www.cppblog.com/guojingjia2006/archive/2014/05/14/206956.html -->
		<!-- 使用的过滤链方式，url 匹配成功则不再继续往下匹配，注意url配置顺序 -->
			<value>
			    <!-- 首页允许访问 -->
				<!-- / = anon -->
				/index = anon
				<!-- 允许静态资源访问 ，** 任意层次的全匹配-->
				/static/** = anon
				<!-- 登录界面允许访问 -->
				/sys/login = anon
				/** = user
				<!-- 后台所有请求需要验证 -->
				/sys/**=authc
			</value> 
		</property>
	</bean>

	<!-- 自动获取并提供给'filterChainDefinitions'属性 -->
	<!-- <bean id="someFilter" class="..."/> -->

	<!-- 自定义Realm 继承自Realm -->
	<bean id="sysRealm" class="com.fomagic.module.sys.shiro.SysRealm" ></bean>
	
	 <!-- 记住我 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="604800" /><!-- 7天 -->
    </bean>
     
    <!-- rememberMe管理器 ,cookie加密的密钥, 默认AES算法 密钥长度(128 256 512 位) -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
    	<!-- 密钥需修改 -->
    	<property name="cipherKey"  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />
    </bean>  
	
	
	
	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义realm  -->
		<property name="realm" ref="sysRealm" />
		<!--<property name="realms">
            <list>
                <ref bean="sysRealm"/>
            </list>
        </property> -->
        <property name="cacheManager" ref="shiroEhcacheManager" /> 
        <property name="rememberMeManager" ref="rememberMeManager" />
        <!-- 默认情况下将使用servlet容器会话。 取消注释此行以使用shiro的本地会话（请参阅JavaDoc了解更多） --> 
        <!-- <property name="sessionMode" value="native"/> -->
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


	<!-- 为Spring配置的bean启用Shiro注解(如@RequiresRoles，@RequiresPermissions)。 -->
	<!-- 仅在lifecycleBeanProcessor运行后运行 -->
	<!-- 需在SpringMvc中启用代理,不使用以下方式
	
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" >
	</bean> -->
		
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>